name: MacOS Build

on:
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Flutter version
        run: flutter --version
      - name: Install dependencies
        run: flutter pub get
      # Install the Apple certificate and provisioning profile
#      - name: Install the Apple certificate and provisioning profile
#        env:
#          BUILD_CERTIFICATE_BASE64: ${{ secrets.APPSTORE_CERT_BASE64 }}
#          P12_PASSWORD: ${{ secrets.APPSTORE_CERT_PASSWORD }}
#          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MOBILEPROVISION_BASE64 }}
#          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
#        run: |
#          # create variables
#          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
#          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
#          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
#
#          # import certificate and provisioning profile from secrets
#          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
#          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
#
#          # create temporary keychain
#          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
#          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
#          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
#
#          # import certificate to keychain
#          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
#          security list-keychain -d user -s $KEYCHAIN_PATH
#
#          # apply provisioning profile
#          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
#          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Build App
        run: flutter build macos
      - name: Verify Build
        run: test -d build/macos/Build/Products/Release/toggl_target.app
      - name: Install create-dmg
        run: brew install create-dmg
      - name: Create dmg
        run: cd installers/dmg && sh create.sh
      - name: list files
        run: ls -la build/macos/Build/Products/Release/
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app.dmg
          path: TogglTarget.dmg
          if-no-files-found: error
          retention-days: 5
#      - name: Clean up keychain and provisioning profile
#        if: ${{ always() }}
#        run: |
#          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
#          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision