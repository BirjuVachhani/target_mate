name: Release Artifacts

on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Tag'
        required: true

jobs:
  android:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "11.x"
          cache: 'gradle'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Flutter version
        run: flutter --version
      - name: Install dependencies
        run: flutter pub get
      - name: Create keystore file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'release.jks'
          fileDir: './android/keystore/'
          encodedString: ${{ secrets.KEYSTORE_FILE }}
      - name: Create keystore.properties file
        run: echo "${{ secrets.KEYSTORE_PROPERTIES }}" > android/keystore.properties
      - name: Build APK
        run: flutter build apk --release
      - name: Build AAB
        run: flutter build appbundle --release
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: TogglTarget.apk
          path: build/app/outputs/flutter-apk/*
          if-no-files-found: error
          retention-days: 5
      - name: Upload AAB
        uses: actions/upload-artifact@v3
        with:
          name: TogglTarget.aab
          path: build/app/outputs/bundle/release/app-release.aab
          if-no-files-found: error
          retention-days: 5
      - name: Clean up keystore and keystore.properties
        if: ${{ always() }}
        run: |
          rm android/keystore.properties
          rm android/keystore/release.jks

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Flutter version
        run: flutter --version
      - name: Install dependencies
        run: flutter pub get
      # Install the Apple certificate and provisioning profile
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.APPSTORE_CERT_BASE64 }}
          P12_PASSWORD: ${{ secrets.APPSTORE_CERT_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Build App
        run: flutter build macos
      - name: Verify Build
        run: test -d build/macos/Build/Products/Release/toggl_target.app
      - name: Install create-dmg
        run: brew install create-dmg
      - name: Create dmg
        run: cd installers/dmg && sh create.sh
      - name: list files
        run: ls -la build/macos/Build/Products/Release/
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app.dmg
          path: TogglTarget.dmg
          if-no-files-found: error
          retention-days: 5
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision

  upload:
    needs: [ android, macos ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist
      - name: Display structure of downloaded files
        run: ls -R dist
      - run: echo "Uploading to tag:"
      - run: echo "workflow_dispatch tag"
      - run: echo ${{ github.event.inputs.tag }}
      - run: echo "github.ref"
      - run: echo ${{ github.ref }}
      - name: Upload binaries to release fro workflow dispath
        if: ${{ github.event.inputs.tag != null }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/artifact/*
          tag: ${{ github.event.inputs.tag }}
          file_glob: true
      - name: Upload binaries to release fro workflow dispath
        if: ${{ github.event.inputs.tag == null }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/artifact/*
          tag: ${{ github.ref }}
          file_glob: true