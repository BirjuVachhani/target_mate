# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# Fixes issue: https://github.com/fastlane/fastlane/issues/21125
require 'spaceship'
Spaceship::ConnectAPI::App.const_set('ESSENTIAL_INCLUDES', 'appStoreVersions')

DEFAULT_APP_IDENTIFIER = 'dev.birju.targetmate'

default_platform(:ios)

platform :android do
  desc "Publishes a new version to the Play store"
  lane :release do
    setup_ci if ENV['CI']

    Dir.chdir '..' do
      sh 'flutter clean && flutter pub get' do |error|
        unless error.exitstatus.eql? 0
          UI.message error
          UI.user_error! 'Unable to run flutter build command'
        end
      end
      sh 'flutter build appbundle --release' do |error|
        unless error.exitstatus.eql? 0
          UI.message error
          UI.user_error! 'Unable to run flutter build command'
        end
      end
      sh 'flutter build apk --release' do |error|
        unless error.exitstatus.eql? 0
          UI.message error
          UI.user_error! 'Unable to run flutter build command'
        end
      end
    end

    upload
  end

  desc "Get certificates for local machine"
  lane :upload do
    setup_ci if ENV['CI']
    supply(
      release_status: "draft",
      json_key_data: ENV['GOOGLE_SERVICE_ACCOUNT_JSON'],
      aab: "build/app/outputs/bundle/release/app-release.aab",
      skip_upload_metadata: true,
      skip_upload_changelogs: true,
      skip_upload_images: true,
      skip_upload_screenshots: true,
    )
  end
end

platform :ios do
  desc "Publishes a new version to the App Store"
  lane :release do
    setup_ci if ENV['CI']

    match(
      type: "appstore",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      readonly: true,
    )

    Dir.chdir '..' do
      sh 'flutter clean && flutter pub get' do |error|
        unless error.exitstatus.eql? 0
          UI.message error
          UI.user_error! 'Unable to run flutter build command'
        end
      end
    end

    # Pod install
    cocoapods(
      clean_install: true,
      podfile: "ios/Podfile",
      use_bundle_exec: false,
    )

    Dir.chdir '..' do
      sh 'flutter build ipa --release --export-method app-store' do |error|
        unless error.exitstatus.eql? 0
          UI.message error
          UI.user_error! 'Unable to run flutter build command'
        end
      end
    end

    build_ios_app(
      workspace: 'ios/Runner.xcworkspace',
      export_method: "app-store",
      clean: false,
      skip_build_archive: true,
      archive_path: "build/ios/archive/Runner.xcarchive",
    )

    app_store_connect_api_key(
      is_key_content_base64: true,
      in_house: false, # if it is enterprise or not
    )

    upload_to_app_store(
      force: true,
      run_precheck_before_submit: false,
      submit_for_review: false,
      ipa: lane_context[SharedValues::IPA_OUTPUT_PATH],
      skip_metadata: true,
      skip_screenshots: true,
    )
  end

  desc "Get certificates for local machine"
  lane :certificates do
    match(
      type: "development",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      force_for_new_devices: true,
      readonly: true,
      platform: "ios",
    )

    match(
      type: "appstore",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      readonly: true,
      platform: "ios",
    )
  end

  desc "Generate new certificates"
  lane :generate_new_certificates do
    match(
      type: "development",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      force_for_new_devices: true,
      readonly: false,
      platform: "ios",
    )

    match(
      type: "appstore",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      readonly: false,
      platform: "ios",
    )
  end
end

platform :mac do
  desc "Publishes a new version to the App Store"
  lane :release do
    setup_ci if ENV['CI']

    match(
      type: "appstore",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      readonly: true,
      platform: "macos",
    )

    match(
      type: "mac_installer_distribution",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      readonly: true,
      platform: "macos",
      skip_provisioning_profiles: true,
    )

    Dir.chdir '..' do
      sh 'flutter clean && flutter pub get' do |error|
        unless error.exitstatus.eql? 0
          UI.message error
          UI.user_error! 'Unable to run flutter build command'
        end
      end
    end

    # Pod install
    cocoapods(
      clean_install: true,
      podfile: "macos/Podfile",
      use_bundle_exec: false,
    )

    Dir.chdir '..' do
      sh 'flutter build macos --release' do |error|
        unless error.exitstatus.eql? 0
          UI.message error
          UI.user_error! 'Unable to run flutter build command'
        end
      end
    end

    build_mac_app(
      workspace: 'macos/Runner.xcworkspace',
      export_method: "app-store",
      clean: false,
      installer_cert_name: "3rd Party Mac Developer Installer: Birju Vachhani (TQ37FM6DBD)",
    )

    app_store_connect_api_key(
      is_key_content_base64: true,
      in_house: false, # if it is enterprise or not
    )

    upload_to_app_store(
      force: true,
      run_precheck_before_submit: false,
      submit_for_review: false,
      ipa: lane_context[SharedValues::IPA_OUTPUT_PATH],
      skip_metadata: true,
      skip_screenshots: true,
    )
  end

  desc "Get certificates for local machine"
  lane :certificates do
    match(
      type: "development",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      force_for_new_devices: true,
      readonly: true,
      platform: "macos",
    )

    match(
      type: "appstore",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      readonly: true,
      platform: "macos",
    )

    match(
      type: "mac_installer_distribution",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      readonly: true,
      platform: "macos",
    )
  end

  desc "Generate new certificates"
  lane :generate_new_certificates do
    match(
      type: "development",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      # force_for_new_devices: true,
      readonly: false,
      platform: "macos",
    )

    match(
      type: "appstore",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      readonly: false,
      platform: "macos",
    )

    match(
      type: "mac_installer_distribution",
      app_identifier: DEFAULT_APP_IDENTIFIER,
      readonly: false,
      platform: "macos",
    )
  end
end

def pod_install
  Dir.chdir '../ios' do
    sh 'pod install' do |error|
      unless error.exitstatus.eql? 0
        UI.message error
        UI.user_error! 'Unable to run pod install command'
      end
    end
  end
  Dir.chdir '../macos' do
    sh 'pod install' do |error|
      unless error.exitstatus.eql? 0
        UI.message error
        UI.user_error! 'Unable to run pod install command'
      end
    end
  end
end